{"ast":null,"code":"var _jsxFileName = \"/Users/gunner/Documents/GitHub/commutr-main/commutr/frontend/src/components/AddressBox.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useMemo } from \"react\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddressBox() {\n  _s();\n\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyCiN6uQWhP-Di1Lnwn63aw8tQJKUD-amPA\",\n    //keep this secret later\n    libraries: [\"places\"]\n  });\n\n  /*#__PURE__*/\n  _jsxDEV(PlacesAutocomplete, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddressBox, \"fRYUc8216GFzAjlYDEKboTmtS+U=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = AddressBox;\n\nconst handleSelect = async val => {\n  setValue(address, false);\n  clearSuggestions();\n  const results = await getGeocode({\n    address\n  });\n  const {\n    lat,\n    lng\n  } = await getLatLng(results[0]);\n  console.log(results, lat, lng);\n};\n\nconst PlacesAutocomplete = () => {\n  _s2();\n\n  const {\n    ready,\n    value,\n    setValue,\n    suggestions: {\n      status,\n      data\n    },\n    clearSuggestions\n  } = usePlacesAutocomplete();\n  return /*#__PURE__*/_jsxDEV(Combobox, {\n    onSelect: handleSelect,\n    children: [/*#__PURE__*/_jsxDEV(ComboboxInput, {\n      value: value,\n      onChange: e => setValue(e.target.value),\n      disabled: !ready,\n      className: \"combobox-input\",\n      placeholder: \"Search an address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ComboboxPopover, {\n      children: /*#__PURE__*/_jsxDEV(ComboboxList, {\n        children: status === \"OK\" && data.map(_ref => {\n          let {\n            place_id,\n            description\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(ComboboxOption, {\n            value: description\n          }, place_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 75\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n\n_s2(PlacesAutocomplete, \"/u8E+PR9W+yUlWC2O5cLKgUp250=\", false, function () {\n  return [usePlacesAutocomplete];\n});\n\n_c2 = PlacesAutocomplete;\nexport default AddressBox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddressBox\");\n$RefreshReg$(_c2, \"PlacesAutocomplete\");","map":{"version":3,"sources":["/Users/gunner/Documents/GitHub/commutr-main/commutr/frontend/src/components/AddressBox.js"],"names":["useState","useMemo","GoogleMap","useLoadScript","Marker","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","AddressBox","isLoaded","googleMapsApiKey","libraries","handleSelect","val","setValue","address","clearSuggestions","results","lat","lng","console","log","PlacesAutocomplete","ready","value","suggestions","status","data","e","target","map","place_id","description"],"mappings":";;;;AAAA,SAAQA,QAAR,EAAkBC,OAAlB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,MAAnC,QAAiD,wBAAjD;AACA,OAAOC,qBAAP,IACIC,UADJ,EAEIC,SAFJ,QAGO,yBAHP;AAIA,SACIC,QADJ,EAEIC,aAFJ,EAGIC,eAHJ,EAIIC,YAJJ,EAKIC,cALJ,QAMO,iBANP;AAOA,OAAO,4BAAP;;;AAEA,SAASC,UAAT,GAAqB;AAAA;;AACjB,QAAM;AAACC,IAAAA;AAAD,MAAaX,aAAa,CAAC;AAC7BY,IAAAA,gBAAgB,EAAE,yCADW;AACgC;AAC7DC,IAAAA,SAAS,EAAE,CAAC,QAAD;AAFkB,GAAD,CAAhC;;AAIA;AAAA,UAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AACH;;GANQH,U;UACcV,a;;;KADdU,U;;AAQT,MAAMI,YAAY,GAAG,MAAOC,GAAP,IAAe;AAChCC,EAAAA,QAAQ,CAACC,OAAD,EAAU,KAAV,CAAR;AACAC,EAAAA,gBAAgB;AAEhB,QAAMC,OAAO,GAAG,MAAMhB,UAAU,CAAC;AAACc,IAAAA;AAAD,GAAD,CAAhC;AACA,QAAM;AAACG,IAAAA,GAAD;AAAMC,IAAAA;AAAN,MAAa,MAAMjB,SAAS,CAACe,OAAO,CAAC,CAAD,CAAR,CAAlC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBC,GAArB,EAA0BC,GAA1B;AACH,CAPD;;AASA,MAAMG,kBAAkB,GAAG,MAAM;AAAA;;AAC7B,QAAM;AACFC,IAAAA,KADE;AAEFC,IAAAA,KAFE;AAGFV,IAAAA,QAHE;AAIFW,IAAAA,WAAW,EAAE;AAACC,MAAAA,MAAD;AAASC,MAAAA;AAAT,KAJX;AAKFX,IAAAA;AALE,MAMFhB,qBAAqB,EANzB;AAQA,sBAAO,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAEY,YAApB;AAAA,4BACH,QAAC,aAAD;AACA,MAAA,KAAK,EAAEY,KADP;AAEA,MAAA,QAAQ,EAAGI,CAAC,IAAId,QAAQ,CAACc,CAAC,CAACC,MAAF,CAASL,KAAV,CAFxB;AAGA,MAAA,QAAQ,EAAE,CAACD,KAHX;AAIA,MAAA,SAAS,EAAC,gBAJV;AAKA,MAAA,WAAW,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,YADG,eAQH,QAAC,eAAD;AAAA,6BACI,QAAC,YAAD;AAAA,kBACKG,MAAM,KAAK,IAAX,IAAmBC,IAAI,CAACG,GAAL,CAAS;AAAA,cAAC;AAACC,YAAAA,QAAD;AAAWC,YAAAA;AAAX,WAAD;AAAA,8BAA6B,QAAC,cAAD;AAAgC,YAAA,KAAK,EAAEA;AAAvC,aAAsBD,QAAtB;AAAA;AAAA;AAAA;AAAA,kBAA7B;AAAA,SAAT;AADxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAcH,CAvBD;;IAAMT,kB;UAOEtB,qB;;;MAPFsB,kB;AAwBN,eAAed,UAAf","sourcesContent":["import {useState, useMemo} from \"react\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\"\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\nimport {\n    Combobox,\n    ComboboxInput,\n    ComboboxPopover,\n    ComboboxList,\n    ComboboxOption,\n} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\"\n\nfunction AddressBox(){\n    const {isLoaded} = useLoadScript({\n        googleMapsApiKey: \"AIzaSyCiN6uQWhP-Di1Lnwn63aw8tQJKUD-amPA\", //keep this secret later\n        libraries: [\"places\"],\n    });\n    <PlacesAutocomplete />\n}\n\nconst handleSelect = async (val) => {\n    setValue(address, false);\n    clearSuggestions();\n\n    const results = await getGeocode({address});\n    const {lat, lng} = await getLatLng(results[0]);\n    console.log(results, lat, lng);\n}\n\nconst PlacesAutocomplete = () => {\n    const {\n        ready,\n        value,\n        setValue,\n        suggestions: {status, data},\n        clearSuggestions,\n    } = usePlacesAutocomplete();\n    \n    return <Combobox onSelect={handleSelect}>\n        <ComboboxInput\n        value={value}\n        onChange={ e => setValue(e.target.value)}\n        disabled={!ready}\n        className=\"combobox-input\"\n        placeholder=\"Search an address\"\n        />\n        <ComboboxPopover>\n            <ComboboxList>\n                {status === \"OK\" && data.map(({place_id, description}) => <ComboboxOption key= {place_id} value={description} />)}\n            </ComboboxList>\n        </ComboboxPopover>\n    </Combobox>;\n}\nexport default AddressBox"]},"metadata":{},"sourceType":"module"}