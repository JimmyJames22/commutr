{"ast":null,"code":"import { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport observeRect from '@reach/observe-rect';\nimport { useIsomorphicLayoutEffect } from '@reach/utils/use-isomorphic-layout-effect';\nimport { isBoolean, isFunction } from '@reach/utils/type-check';\nimport warning from 'tiny-warning';\n/**\n * Welcome to @reach/rect!\n *\n * Measures DOM elements (aka. bounding client rect).\n *\n * @see getBoundingClientRect https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n * @see Docs                  https://reach.tech/rect\n * @see Source                https://github.com/reach/reach-ui/tree/main/packages/rect\n */\n\n/**\n * Rect\n *\n * @param props\n */\n\nvar Rect = function Rect(_ref) {\n  var onChange = _ref.onChange,\n      _ref$observe = _ref.observe,\n      observe = _ref$observe === void 0 ? true : _ref$observe,\n      children = _ref.children;\n  var ref = useRef(null);\n  var rect = useRect(ref, {\n    observe: observe,\n    onChange: onChange\n  });\n  return children({\n    ref: ref,\n    rect: rect\n  });\n};\n/**\n * @see Docs https://reach.tech/rect#rect-props\n */\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  Rect.displayName = \"Rect\";\n  Rect.propTypes = {\n    children: PropTypes.func.isRequired,\n    observe: PropTypes.bool,\n    onChange: PropTypes.func\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\n * useRect\n *\n * @param nodeRef\n * @param observe\n * @param onChange\n */\n\n\nfunction useRect(nodeRef, observeOrOptions, deprecated_onChange) {\n  var observe;\n  var onChange;\n\n  if (isBoolean(observeOrOptions)) {\n    observe = observeOrOptions;\n  } else {\n    var _observeOrOptions$obs;\n\n    observe = (_observeOrOptions$obs = observeOrOptions == null ? void 0 : observeOrOptions.observe) != null ? _observeOrOptions$obs : true;\n    onChange = observeOrOptions == null ? void 0 : observeOrOptions.onChange;\n  }\n\n  if (isFunction(deprecated_onChange)) {\n    onChange = deprecated_onChange;\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      process.env.NODE_ENV !== \"production\" ? warning(!isBoolean(observeOrOptions), \"Passing `observe` as the second argument to `useRect` is deprecated and will be removed in a future version of Reach UI. Instead, you can pass an object of options with an `observe` property as the second argument (`useRect(ref, { observe })`).\\n\" + \"See https://reach.tech/rect#userect-observe\") : void 0;\n    }, [observeOrOptions]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    useEffect(function () {\n      process.env.NODE_ENV !== \"production\" ? warning(!isFunction(deprecated_onChange), \"Passing `onChange` as the third argument to `useRect` is deprecated and will be removed in a future version of Reach UI. Instead, you can pass an object of options with an `onChange` property as the second argument (`useRect(ref, { onChange })`).\\n\" + \"See https://reach.tech/rect#userect-onchange\") : void 0;\n    }, [deprecated_onChange]);\n  }\n\n  var _React$useState = useState(nodeRef.current),\n      element = _React$useState[0],\n      setElement = _React$useState[1];\n\n  var initialRectIsSet = useRef(false);\n  var initialRefIsSet = useRef(false);\n\n  var _React$useState2 = useState(null),\n      rect = _React$useState2[0],\n      setRect = _React$useState2[1];\n\n  var onChangeRef = useRef(onChange); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useIsomorphicLayoutEffect(function () {\n    onChangeRef.current = onChange;\n\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current);\n    }\n  });\n  useIsomorphicLayoutEffect(function () {\n    if (element && !initialRectIsSet.current) {\n      initialRectIsSet.current = true;\n      setRect(element.getBoundingClientRect());\n    }\n  }, [element]);\n  useIsomorphicLayoutEffect(function () {\n    if (!observe) {\n      return;\n    }\n\n    var elem = element; // State initializes before refs are placed, meaning the element state will\n    // be undefined on the first render. We still want the rect on the first\n    // render, so initially we'll use the nodeRef that was passed instead of\n    // state for our measurements.\n\n    if (!initialRefIsSet.current) {\n      initialRefIsSet.current = true;\n      elem = nodeRef.current;\n    }\n\n    if (!elem) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\"You need to place the ref\");\n      }\n\n      return;\n    }\n\n    var observer = observeRect(elem, function (rect) {\n      onChangeRef.current == null ? void 0 : onChangeRef.current(rect);\n      setRect(rect);\n    });\n    observer.observe();\n    return function () {\n      observer.unobserve();\n    };\n  }, [observe, element, nodeRef]);\n  return rect;\n}\n\nexport default Rect;\nexport { Rect, useRect };","map":{"version":3,"sources":["/Users/gunner/Documents/GitHub/commutr-main/commutr/frontend/node_modules/@reach/rect/dist/reach-rect.esm.js"],"names":["useRef","useEffect","useState","PropTypes","observeRect","useIsomorphicLayoutEffect","isBoolean","isFunction","warning","Rect","_ref","onChange","_ref$observe","observe","children","ref","rect","useRect","process","env","NODE_ENV","displayName","propTypes","func","isRequired","bool","nodeRef","observeOrOptions","deprecated_onChange","_observeOrOptions$obs","_React$useState","current","element","setElement","initialRectIsSet","initialRefIsSet","_React$useState2","setRect","onChangeRef","getBoundingClientRect","elem","console","warn","observer","unobserve"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport observeRect from '@reach/observe-rect';\nimport { useIsomorphicLayoutEffect } from '@reach/utils/use-isomorphic-layout-effect';\nimport { isBoolean, isFunction } from '@reach/utils/type-check';\nimport warning from 'tiny-warning';\n\n/**\n * Welcome to @reach/rect!\n *\n * Measures DOM elements (aka. bounding client rect).\n *\n * @see getBoundingClientRect https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n * @see Docs                  https://reach.tech/rect\n * @see Source                https://github.com/reach/reach-ui/tree/main/packages/rect\n */\n\n/**\n * Rect\n *\n * @param props\n */\n\nvar Rect = function Rect(_ref) {\n  var onChange = _ref.onChange,\n      _ref$observe = _ref.observe,\n      observe = _ref$observe === void 0 ? true : _ref$observe,\n      children = _ref.children;\n  var ref = useRef(null);\n  var rect = useRect(ref, {\n    observe: observe,\n    onChange: onChange\n  });\n  return children({\n    ref: ref,\n    rect: rect\n  });\n};\n/**\n * @see Docs https://reach.tech/rect#rect-props\n */\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  Rect.displayName = \"Rect\";\n  Rect.propTypes = {\n    children: PropTypes.func.isRequired,\n    observe: PropTypes.bool,\n    onChange: PropTypes.func\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * useRect\n *\n * @param nodeRef\n * @param observe\n * @param onChange\n */\nfunction useRect(nodeRef, observeOrOptions, deprecated_onChange) {\n  var observe;\n  var onChange;\n\n  if (isBoolean(observeOrOptions)) {\n    observe = observeOrOptions;\n  } else {\n    var _observeOrOptions$obs;\n\n    observe = (_observeOrOptions$obs = observeOrOptions == null ? void 0 : observeOrOptions.observe) != null ? _observeOrOptions$obs : true;\n    onChange = observeOrOptions == null ? void 0 : observeOrOptions.onChange;\n  }\n\n  if (isFunction(deprecated_onChange)) {\n    onChange = deprecated_onChange;\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      process.env.NODE_ENV !== \"production\" ? warning(!isBoolean(observeOrOptions), \"Passing `observe` as the second argument to `useRect` is deprecated and will be removed in a future version of Reach UI. Instead, you can pass an object of options with an `observe` property as the second argument (`useRect(ref, { observe })`).\\n\" + \"See https://reach.tech/rect#userect-observe\") : void 0;\n    }, [observeOrOptions]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    useEffect(function () {\n      process.env.NODE_ENV !== \"production\" ? warning(!isFunction(deprecated_onChange), \"Passing `onChange` as the third argument to `useRect` is deprecated and will be removed in a future version of Reach UI. Instead, you can pass an object of options with an `onChange` property as the second argument (`useRect(ref, { onChange })`).\\n\" + \"See https://reach.tech/rect#userect-onchange\") : void 0;\n    }, [deprecated_onChange]);\n  }\n\n  var _React$useState = useState(nodeRef.current),\n      element = _React$useState[0],\n      setElement = _React$useState[1];\n\n  var initialRectIsSet = useRef(false);\n  var initialRefIsSet = useRef(false);\n\n  var _React$useState2 = useState(null),\n      rect = _React$useState2[0],\n      setRect = _React$useState2[1];\n\n  var onChangeRef = useRef(onChange); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useIsomorphicLayoutEffect(function () {\n    onChangeRef.current = onChange;\n\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current);\n    }\n  });\n  useIsomorphicLayoutEffect(function () {\n    if (element && !initialRectIsSet.current) {\n      initialRectIsSet.current = true;\n      setRect(element.getBoundingClientRect());\n    }\n  }, [element]);\n  useIsomorphicLayoutEffect(function () {\n    if (!observe) {\n      return;\n    }\n\n    var elem = element; // State initializes before refs are placed, meaning the element state will\n    // be undefined on the first render. We still want the rect on the first\n    // render, so initially we'll use the nodeRef that was passed instead of\n    // state for our measurements.\n\n    if (!initialRefIsSet.current) {\n      initialRefIsSet.current = true;\n      elem = nodeRef.current;\n    }\n\n    if (!elem) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\"You need to place the ref\");\n      }\n\n      return;\n    }\n\n    var observer = observeRect(elem, function (rect) {\n      onChangeRef.current == null ? void 0 : onChangeRef.current(rect);\n      setRect(rect);\n    });\n    observer.observe();\n    return function () {\n      observer.unobserve();\n    };\n  }, [observe, element, nodeRef]);\n  return rect;\n}\n\nexport default Rect;\nexport { Rect, useRect };\n"]},"metadata":{},"sourceType":"module"}